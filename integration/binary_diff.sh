#!/bin/bash

# Basic binary compatibility test script for um2nc-standalone
# Requires nccmp to be installed: https://gitlab.com/remikz/nccmp
#
# This script runs some basic tests to ensure binary compatibility
# between Martix Dix's base script & changes introduced by the
# um2nc-standalone development effort.
#
# TODO: add larger inputs with more vars to the testing?
#
#
# Terminal session setup
# $ export UM2NC_PROJ=<um2nc-standalone git dir>
# $ export UM2NC_TEST_DATA=<dir with test netCDFs>
#
# Usage:
# cd <um2nc-standalone git dir>
# ./integration/binary_diff.sh
#
# NB: will display some um2nc output
#
# Script warns if there is a binary difference comparing netCDF files
# If debugging a diff, the original source netCDF & the um2nc dev netCDF
# can be converted to text with `ncks` & compared with a diff tool.

echo "Binary equivalence/backwards compatibility diff for um2nc-standalone"

if [ -z ${UM2NC_PROJ+x} ]; then
  echo "ERROR: set UM2NC_PROJ to um2nc-standalone project dir";
  exit
fi

if [ -z ${UM2NC_TEST_DATA+x} ]; then
  echo "ERROR: set UM2NC_TEST_DATA to um2nc-standalone test data dir";
  exit
fi

if [ ! -d "$UM2NC_TEST_DATA" ]; then
  echo "ERROR: UM2NC_TEST_DATA dir does not exist";
  exit
fi

function diff_warn {
  # compare & warn if data, encodings, global attributes, metdatat,
  # and history do not match.
  echo "Comparing $1 and $2"
  nccmp -degh "$1" "$2"
}

# input paths
# test netCDF files were produced using um2netcdf from this commit:
# https://github.com/ACCESS-NRI/um2nc-standalone/commit/f62105b45eb39d2beed5a7ac71f439ff90f0f00c
# in the payu1.1.5 environment on gadi https://github.com/ACCESS-NRI/payu-condaenv/releases/tag/1.1.5
# test netCDFs can be regenerated by checking out the above commit and
# with the args $source_ff and orig_(no)mask_nc

source_ff=$UM2NC_TEST_DATA/aiihca.paa1jan.subset  # base file to convert

orig_nomask_nc=$UM2NC_TEST_DATA/aiihca.paa1jan.subset.nomask.orig.nc
orig_mask_nc=$UM2NC_TEST_DATA/aiihca.paa1jan.subset.orig.nc

# output paths
out_nomask_nc=$UM2NC_PROJ/integration/nomask.nc
out_mask_nc=$UM2NC_PROJ/integration/mask.nc

# Common test options
# All tests need --nohist otherwise diff fails on the hist comment date string

# execute nomask variant, pressure masking is turned OFF & all cubes are kept
# TODO: capture error condition if conversion does not complete
rm -f "$nomask_path"  # remove previous data
python3 "$UM2NC_PROJ"/umpost/um2netcdf.py --verbose \
                                        --nohist \
                                        --nomask \
                                        "$source_ff" \
                                        "$out_nomask_nc"

diff_warn "$orig_nomask_nc"  "$out_nomask_nc"
echo

# execute pressure masking variant: cubes which cannot be pressure masked are dropped
# TODO: capture error condition if conversion does not complete
rm -f "$mask_path"  # remove previous data
python3 "$UM2NC_PROJ"/umpost/um2netcdf.py --verbose \
                                        --nohist \
                                        "$source_ff" \
                                        "$out_mask_nc"

diff_warn "$orig_mask_nc"  "$out_mask_nc"
